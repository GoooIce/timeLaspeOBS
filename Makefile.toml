[plugins.impl.powershell]
script = '''
# Adds simpler powershell integration

# make sure we are on windows
windows = is_windows
assert ${windows}

# make sure the task has args
args_empty = array_is_empty ${task.args}
assert_false ${args_empty}

task_definition = json_parse --collection ${task.as_json}

# prepend powershell args to task args
powershell_args = array -C
all_args = array_concat ${powershell_args} ${task.args}
args = map_get ${task_definition} args
release ${args}
map_put ${task_definition} args ${all_args}

# set powershell command
map_put ${task_definition} command pwsh.exe

powershell_task_json = json_encode --collection ${task_definition}

echo Custom Task:\n${powershell_task_json}
cm_plugin_run_custom_task ${powershell_task_json}
'''

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.build]
command = "cargo"
args = ["build"]

[tasks.reinstall]
plugin = "powershell"
args =  ["cp K:/rust_space/timeLaspeOBS/target/debug/timelapseobs.dll 'C:/Program Files/obs-studio/obs-plugins/64bit/timelapseobs.dll'"]
dependencies = ["build", "killObs"]

[tasks.install]
plugin = "powershell"
args =  ["cp K:/rust_space/timeLaspeOBS/target/debug/timelapseobs.dll 'C:/Program Files/obs-studio/obs-plugins/64bit/timelapseobs.dll'"]
dependencies = ["build"]

[tasks.killObs]
plugin = "powershell"
args = ["get-process obs64 | Stop-Process"]

[tasks.rerun]
script_runner = "@shell"
script = '''
start /d "C:\Program Files\obs-studio\bin\64bit" "" obs64.exe
'''
dependencies = ["reinstall"]

[tasks.run]
script_runner = "@shell"
script = '''
start /d "C:\Program Files\obs-studio\bin\64bit" "" obs64.exe
'''
dependencies = ["install"]